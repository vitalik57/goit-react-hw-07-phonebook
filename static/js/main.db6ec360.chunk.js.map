{"version":3,"sources":["Components/clientList/ClientListStyled.js","Components/clientList/ClientList.js","Components/clientsForm/ClientsFormStyled.js","Components/clientsForm/ClientsForm.js","Components/filter/FilterStyled.js","Components/filter/Filter.js","Components/clients/ClientStyled.js","redux/clients/clientsReducer/clientsSelector.js","redux/clients/filterReducer/filterSelector.js","redux/clients/clientsReducer/clientsAction.js","redux/clients/filterReducer/filterAction.js","redux/clients/filterReducer/filterOperations.js","Components/clients/Clients.js","redux/clients/clientsReducer/clientsOperations.js","App.js","redux/clients/filterReducer/filterReduser.js","redux/clients/clientsReducer/clientsReducer.js","redux/store.js","index.js"],"names":["ClientListStyled","styled","ul","ClientList","clients","deleteClient","map","client","name","number","type","onClick","id","memo","ClientsFormStyled","form","ClientsForm","state","changeInput","e","target","value","setState","onSubmit","preventDefault","props","onCheckRepeated","alert","addClient","this","onChange","pattern","title","required","Component","FilterStyled","div","Filter","filter","doFilter","ClientStyled","h1","getLoader","contacts","loader","getFilter","getFilterClients","createSelector","items","formatedFilter","toLowerCase","contact","includes","addALLClients","createAction","setError","resetError","setLoading","doFilterOperations","dispatch","Clients","a","addClientOperation","deleteClientOperation","some","addALLClientsOperations","console","log","error","mapDispatchToProps","getState","axios","get","response","data","contactsObj","Object","keys","key","dir","post","delete","connect","App","filterReducer","createReducer","_","payload","clientsReducer","el","errorReducer","loaderReducer","rootReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db6ec360.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ClientListStyled = styled.ul`\r\n  text-align: center\r\n  width: 200px;\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  button {\r\n    width: 60px;\r\n    height: 20px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import React, { memo } from \"react\";\r\nimport { ClientListStyled } from \"./ClientListStyled\";\r\n\r\nconst ClientList = ({ clients, deleteClient }) => {\r\n  return (\r\n    <ClientListStyled>\r\n      {clients?.map((client) => (\r\n        <li key={client.id}>\r\n          <p>\r\n            {client.name}:{client.number}\r\n          </p>\r\n          <button type=\"button\" onClick={deleteClient} id={client.id}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ClientListStyled>\r\n  );\r\n};\r\n\r\nexport default memo(ClientList);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClientsFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  input {\r\n    border-radius: 5px;\r\n    width: 175px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  button {\r\n    border-radius: 5px;\r\n    width: 50px;\r\n    /* margin: 0 auto; */\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { ClientsFormStyled } from \"./ClientsFormStyled\";\r\n\r\nclass ClientsForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.onCheckRepeated(this.state.name)) {\r\n      alert(`${this.state.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    this.props.addClient(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ClientsFormStyled onSubmit={this.onSubmit}>\r\n          Name:\r\n          <input\r\n            onChange={this.changeInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          Number:\r\n          <input\r\n            onChange={this.changeInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Add</button>\r\n        </ClientsFormStyled>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientsForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  input {\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ filter, doFilter }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <h2>Find your contact by name</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={doFilter}\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClientStyled = styled.h1`\r\n  /* text-align: center; */\r\n`;\r\n","export const getAllItems = (state) => state.contacts.items;\r\nexport const getError = (state) => state.contacts.error;\r\nexport const getLoader = (state) => state.contacts.loader;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { getAllItems } from \"../clientsReducer/clientsSelector\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilterClients = createSelector(\r\n  [getAllItems, getFilter],\r\n  (items, filter) => {\r\n    const formatedFilter = filter?.toLowerCase();\r\n    return items?.filter((contact) =>\r\n      contact.name.toLowerCase().includes(formatedFilter)\r\n    );\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addALLClients = createAction(\"addALLClients\");\r\nexport const addClient = createAction(\"addClient\");\r\nexport const deleteClient = createAction(\"deleteClient\");\r\n\r\nexport const setError = createAction(\"setError\");\r\nexport const resetError = createAction(\"resetError\");\r\n\r\nexport const setLoading = createAction(\"setLoading\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nexport const doFilter = createAction(\"doFilter\");\r\n","import { doFilter } from \"./filterAction\";\r\n\r\nconst doFilterOperations = (value) => (dispatch) => {\r\n  dispatch(doFilter(value));\r\n};\r\n\r\nexport default doFilterOperations;\r\n","import React, { Component } from \"react\";\r\nimport ClientList from \"../clientList/ClientList\";\r\nimport ClientsForm from \"../clientsForm/ClientsForm\";\r\nimport Filter from \"../filter/Filter\";\r\nimport { connect } from \"react-redux\";\r\nimport { ClientStyled } from \"./ClientStyled\";\r\nimport {\r\n  getFilter,\r\n  getFilterClients,\r\n} from \"../../redux/clients/filterReducer/filterSelector\";\r\nimport { getLoader } from \"../../redux/clients/clientsReducer/clientsSelector\";\r\nimport {\r\n  addALLClientsOperations,\r\n  addClientOperation,\r\n  deleteClientOperation,\r\n} from \"../../redux/clients/clientsReducer/clientsOperations\";\r\nimport doFilterOperations from \"../../redux/clients/filterReducer/filterOperations\";\r\n\r\nclass Clients extends Component {\r\n  // state = {\r\n  //   contacts: [],\r\n  //   filter: \"\",\r\n  // };\r\n\r\n  async componentDidMount() {\r\n    this.props.addALLClientsOperations();\r\n    // try {\r\n    //   const response = await axios.get(\r\n    //     `https://shop-a2177-default-rtdb.firebaseio.com/clients.json`\r\n    //   );\r\n    //   if (response.data) {\r\n    //     const contactsObj = Object.keys(response.data).map((key) => ({\r\n    //       ...response.data[key],\r\n    //       id: key,\r\n    //     }));\r\n    //     console.log(contactsObj);\r\n    //     this.props.addALLClients(contactsObj);\r\n    //     // this.setState({ contacts: contactsObj });\r\n    //   } else return;\r\n    // } catch (error) {}\r\n  }\r\n\r\n  addClient = async (client) => {\r\n    this.props.addClientOperation(client);\r\n    // try {\r\n    //   const response = await axios.post(\r\n    //     `https://shop-a2177-default-rtdb.firebaseio.com/clients.json`,\r\n    //     client\r\n    //   );\r\n    //   this.props.addClient({ ...client, id: response.data.name });\r\n    //   // this.setState((prevState) => ({\r\n    //   //   contacts: [\r\n    //   //     ...prevState.contacts,\r\n    //   //     { ...client, id: response.data.name },\r\n    //   //   ],\r\n    //   // }));\r\n    // } catch (error) {}\r\n  };\r\n\r\n  deleteClient = async (e) => {\r\n    let { id } = e.target;\r\n    this.props.deleteClientOperation(id);\r\n    // try {\r\n    //   let { id } = e.target;\r\n    //   await axios.delete(\r\n    //     `https://shop-a2177-default-rtdb.firebaseio.com/clients/${id}.json`\r\n    //   );\r\n    //   this.props.deleteClient(id);\r\n    //   // this.setState({\r\n    //   //   contacts: this.state.contacts.filter((el) => el.id !== id),\r\n    //   // });\r\n    // } catch (error) {}\r\n  };\r\n\r\n  // getFilter = () => {\r\n  //   return this.props.contacts.items?.filter((contact) =>\r\n  //     contact.name\r\n  //       .toLowerCase()\r\n  //       .includes(this.props.contacts.filter?.toLowerCase())\r\n  //   );\r\n  // };\r\n\r\n  doFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.doFilterOperations(value);\r\n    // this.setState({ filter: value });\r\n  };\r\n\r\n  onCheckRepeated = (name) => {\r\n    return this.props.contacts.items.some((contact) => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.contacts);\r\n    return (\r\n      <>\r\n        {this.props.error && <h2>{this.props.error}</h2>}\r\n        {this.props.loader && <h2>Loading....</h2>}\r\n        <ClientStyled>Phonebook</ClientStyled>\r\n        <ClientsForm\r\n          addClient={this.addClient}\r\n          onCheckRepeated={this.onCheckRepeated}\r\n        />\r\n\r\n        <Filter doFilter={this.doFilter} filter={this.props.contacts.filter} />\r\n        <h2>Contacts:</h2>\r\n        <ClientList\r\n          clients={this.props.contacts.items}\r\n          deleteClient={this.deleteClient}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: {\r\n    items: getFilterClients(state),\r\n    filter: getFilter(state),\r\n    loader: getLoader(state),\r\n  },\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addALLClientsOperations,\r\n  addClientOperation,\r\n  deleteClientOperation,\r\n  doFilterOperations,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\r\n","import axios from \"axios\";\r\nimport { addALLClients, addClient, deleteClient, setError, setLoading } from \"./clientsAction\";\r\n\r\nconst addALLClientsOperations = () => async (dispatch, getState) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const response = await axios.get(`https://project-shop-8af1e-default-rtdb.firebaseio.com/clients.json`);\r\n    if (response.data) {\r\n      const contactsObj = Object.keys(response.data).map(key => ({\r\n        ...response.data[key],\r\n        id: key\r\n      }));\r\n\r\n      console.log(contactsObj);\r\n      dispatch(addALLClients(contactsObj));\r\n      // this.setState({ contacts: contactsObj });\r\n    } else return;\r\n  } catch (error) {\r\n    console.dir(error.response.data.error);\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nconst addClientOperation = client => async (dispatch, getState) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const response = await axios.post(`https://project-shop-8af1e-default-rtdb.firebaseio.com/clients.json`, client);\r\n    dispatch(addClient({ ...client, id: response.data.name }));\r\n    // this.setState((prevState) => ({\r\n    //   contacts: [\r\n    //     ...prevState.contacts,\r\n    //     { ...client, id: response.data.name },\r\n    //   ],\r\n    // }));\r\n  } catch (error) {\r\n    console.dir(error.response.data.error);\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nconst deleteClientOperation = id => async (dispatch, getState) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    await axios.delete(`https://project-shop-8af1e-default-rtdb.firebaseio.com/clients/${id}.json`);\r\n    dispatch(deleteClient(id));\r\n    // this.setState({\r\n    //   contacts: this.state.contacts.filter((el) => el.id !== id),\r\n    // });\r\n  } catch (error) {\r\n    console.dir(error.response.data.error);\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nexport { addALLClientsOperations, addClientOperation, deleteClientOperation };\r\n","import React, { Component } from \"react\";\r\n\r\nimport Clients from \"./Components/clients/Clients\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Clients />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { doFilter } from \"./filterAction\";\r\nconst filterReducer = createReducer(\"\", {\r\n  [doFilter]: (_, { payload }) => payload,\r\n});\r\nexport default filterReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addALLClients,\r\n  addClient,\r\n  deleteClient,\r\n  resetError,\r\n  setError,\r\n  setLoading,\r\n} from \"./clientsAction\";\r\n\r\nexport const clientsReducer = createReducer([], {\r\n  [addALLClients]: (_, { payload }) => payload,\r\n  [addClient]: (state, { payload }) => [...state, payload],\r\n  [deleteClient]: (state, { payload }) => [\r\n    ...state.filter((el) => el.id !== payload),\r\n  ],\r\n});\r\n\r\nexport const errorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport const loaderReducer = createReducer(false, {\r\n  [setLoading]: (state) => !state,\r\n});\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"./clients/filterReducer/filterReduser\";\r\nimport {\r\n  clientsReducer,\r\n  errorReducer,\r\n  loaderReducer,\r\n} from \"./clients/clientsReducer/clientsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: clientsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nconst store = configureStore(\r\n  {\r\n    reducer: {\r\n      contacts: rootReducer,\r\n    },\r\n  },\r\n  { middleware: [...getDefaultMiddleware()] }\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}